<?php
/*
 * Copyright (c) 2017-2018 THL A29 Limited, a Tencent company. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Gaap\V20180529\Models;
use TencentCloud\Common\AbstractModel;

/**
 * @method integer getProjectId() 获取Project ID of connection.
 * @method void setProjectId(integer $ProjectId) 设置Project ID of connection.
 * @method string getProxyName() 获取Connection name.
 * @method void setProxyName(string $ProxyName) 设置Connection name.
 * @method string getAccessRegion() 获取Access region.
 * @method void setAccessRegion(string $AccessRegion) 设置Access region.
 * @method integer getBandwidth() 获取Connection bandwidth cap. Unit: Mbps.
 * @method void setBandwidth(integer $Bandwidth) 设置Connection bandwidth cap. Unit: Mbps.
 * @method integer getConcurrent() 获取Connection concurrence cap, which indicates the maximum number of simultaneous online connections. Unit: 10,000 connections.
 * @method void setConcurrent(integer $Concurrent) 设置Connection concurrence cap, which indicates the maximum number of simultaneous online connections. Unit: 10,000 connections.
 * @method string getRealServerRegion() 获取Origin server region. If GroupId exists, the origin server region is the one of connection group, and this field is not required. If GroupId does not exist, this field is reuqired.
 * @method void setRealServerRegion(string $RealServerRegion) 设置Origin server region. If GroupId exists, the origin server region is the one of connection group, and this field is not required. If GroupId does not exist, this field is reuqired.
 * @method string getClientToken() 获取A string used to ensure the idempotency of the request, which is generated by the user and must be unique to each request. The maximum length is 64 ASCII characters. If this parameter is not specified, the idempotency of the request cannot be guaranteed.
For more information, please see How to Ensure Idempotence.
 * @method void setClientToken(string $ClientToken) 设置A string used to ensure the idempotency of the request, which is generated by the user and must be unique to each request. The maximum length is 64 ASCII characters. If this parameter is not specified, the idempotency of the request cannot be guaranteed.
For more information, please see How to Ensure Idempotence.
 * @method string getGroupId() 获取Connection group ID. This parameter is required when the connection is created in the connection group. Otherwise, this field is ignored.
 * @method void setGroupId(string $GroupId) 设置Connection group ID. This parameter is required when the connection is created in the connection group. Otherwise, this field is ignored.
 * @method array getTagSet() 获取List of tags to be added for connection.
 * @method void setTagSet(array $TagSet) 设置List of tags to be added for connection.
 * @method string getClonedProxyId() 获取ID of the replicated connection. Only a running connection can be replicated.
The connection is to be replicated if this parameter is set.
 * @method void setClonedProxyId(string $ClonedProxyId) 设置ID of the replicated connection. Only a running connection can be replicated.
The connection is to be replicated if this parameter is set.
 */

/**
 *CreateProxy request structure.
 */
class CreateProxyRequest extends AbstractModel
{
    /**
     * @var integer Project ID of connection.
     */
    public $ProjectId;

    /**
     * @var string Connection name.
     */
    public $ProxyName;

    /**
     * @var string Access region.
     */
    public $AccessRegion;

    /**
     * @var integer Connection bandwidth cap. Unit: Mbps.
     */
    public $Bandwidth;

    /**
     * @var integer Connection concurrence cap, which indicates the maximum number of simultaneous online connections. Unit: 10,000 connections.
     */
    public $Concurrent;

    /**
     * @var string Origin server region. If GroupId exists, the origin server region is the one of connection group, and this field is not required. If GroupId does not exist, this field is reuqired.
     */
    public $RealServerRegion;

    /**
     * @var string A string used to ensure the idempotency of the request, which is generated by the user and must be unique to each request. The maximum length is 64 ASCII characters. If this parameter is not specified, the idempotency of the request cannot be guaranteed.
For more information, please see How to Ensure Idempotence.
     */
    public $ClientToken;

    /**
     * @var string Connection group ID. This parameter is required when the connection is created in the connection group. Otherwise, this field is ignored.
     */
    public $GroupId;

    /**
     * @var array List of tags to be added for connection.
     */
    public $TagSet;

    /**
     * @var string ID of the replicated connection. Only a running connection can be replicated.
The connection is to be replicated if this parameter is set.
     */
    public $ClonedProxyId;
    /**
     * @param integer $ProjectId Project ID of connection.
     * @param string $ProxyName Connection name.
     * @param string $AccessRegion Access region.
     * @param integer $Bandwidth Connection bandwidth cap. Unit: Mbps.
     * @param integer $Concurrent Connection concurrence cap, which indicates the maximum number of simultaneous online connections. Unit: 10,000 connections.
     * @param string $RealServerRegion Origin server region. If GroupId exists, the origin server region is the one of connection group, and this field is not required. If GroupId does not exist, this field is reuqired.
     * @param string $ClientToken A string used to ensure the idempotency of the request, which is generated by the user and must be unique to each request. The maximum length is 64 ASCII characters. If this parameter is not specified, the idempotency of the request cannot be guaranteed.
For more information, please see How to Ensure Idempotence.
     * @param string $GroupId Connection group ID. This parameter is required when the connection is created in the connection group. Otherwise, this field is ignored.
     * @param array $TagSet List of tags to be added for connection.
     * @param string $ClonedProxyId ID of the replicated connection. Only a running connection can be replicated.
The connection is to be replicated if this parameter is set.
     */
    function __construct()
    {

    }
    /**
     * 内部实现，用户禁止调用
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("ProjectId",$param) and $param["ProjectId"] !== null) {
            $this->ProjectId = $param["ProjectId"];
        }

        if (array_key_exists("ProxyName",$param) and $param["ProxyName"] !== null) {
            $this->ProxyName = $param["ProxyName"];
        }

        if (array_key_exists("AccessRegion",$param) and $param["AccessRegion"] !== null) {
            $this->AccessRegion = $param["AccessRegion"];
        }

        if (array_key_exists("Bandwidth",$param) and $param["Bandwidth"] !== null) {
            $this->Bandwidth = $param["Bandwidth"];
        }

        if (array_key_exists("Concurrent",$param) and $param["Concurrent"] !== null) {
            $this->Concurrent = $param["Concurrent"];
        }

        if (array_key_exists("RealServerRegion",$param) and $param["RealServerRegion"] !== null) {
            $this->RealServerRegion = $param["RealServerRegion"];
        }

        if (array_key_exists("ClientToken",$param) and $param["ClientToken"] !== null) {
            $this->ClientToken = $param["ClientToken"];
        }

        if (array_key_exists("GroupId",$param) and $param["GroupId"] !== null) {
            $this->GroupId = $param["GroupId"];
        }

        if (array_key_exists("TagSet",$param) and $param["TagSet"] !== null) {
            $this->TagSet = [];
            foreach ($param["TagSet"] as $key => $value){
                $obj = new TagPair();
                $obj->deserialize($value);
                array_push($this->TagSet, $obj);
            }
        }

        if (array_key_exists("ClonedProxyId",$param) and $param["ClonedProxyId"] !== null) {
            $this->ClonedProxyId = $param["ClonedProxyId"];
        }
    }
}
