<?php
/*
 * Copyright (c) 2017-2018 THL A29 Limited, a Tencent company. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Gaap\V20180529\Models;
use TencentCloud\Common\AbstractModel;

/**
 * @method integer getProjectId() 获取The target project ID.
 * @method void setProjectId(integer $ProjectId) 设置The target project ID.
 * @method array getInstanceIds() 获取ID of one or multiple connections to be operated; It’s an old parameter, please switch to ProxyIds.
 * @method void setInstanceIds(array $InstanceIds) 设置ID of one or multiple connections to be operated; It’s an old parameter, please switch to ProxyIds.
 * @method string getClientToken() 获取A string used to ensure the idempotency of the request, which is generated by the user and must be unique to each request. The maximum length is 64 ASCII characters. If this parameter is not specified, the idempotency of the request cannot be guaranteed.
For more information, please see How to Ensure Idempotence.
 * @method void setClientToken(string $ClientToken) 设置A string used to ensure the idempotency of the request, which is generated by the user and must be unique to each request. The maximum length is 64 ASCII characters. If this parameter is not specified, the idempotency of the request cannot be guaranteed.
For more information, please see How to Ensure Idempotence.
 * @method array getProxyIds() 获取ID of one or multiple connections to be operated; It’s a new parameter.
 * @method void setProxyIds(array $ProxyIds) 设置ID of one or multiple connections to be operated; It’s a new parameter.
 */

/**
 *ModifyProxiesProject request structure.
 */
class ModifyProxiesProjectRequest extends AbstractModel
{
    /**
     * @var integer The target project ID.
     */
    public $ProjectId;

    /**
     * @var array ID of one or multiple connections to be operated; It’s an old parameter, please switch to ProxyIds.
     */
    public $InstanceIds;

    /**
     * @var string A string used to ensure the idempotency of the request, which is generated by the user and must be unique to each request. The maximum length is 64 ASCII characters. If this parameter is not specified, the idempotency of the request cannot be guaranteed.
For more information, please see How to Ensure Idempotence.
     */
    public $ClientToken;

    /**
     * @var array ID of one or multiple connections to be operated; It’s a new parameter.
     */
    public $ProxyIds;
    /**
     * @param integer $ProjectId The target project ID.
     * @param array $InstanceIds ID of one or multiple connections to be operated; It’s an old parameter, please switch to ProxyIds.
     * @param string $ClientToken A string used to ensure the idempotency of the request, which is generated by the user and must be unique to each request. The maximum length is 64 ASCII characters. If this parameter is not specified, the idempotency of the request cannot be guaranteed.
For more information, please see How to Ensure Idempotence.
     * @param array $ProxyIds ID of one or multiple connections to be operated; It’s a new parameter.
     */
    function __construct()
    {

    }
    /**
     * 内部实现，用户禁止调用
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("ProjectId",$param) and $param["ProjectId"] !== null) {
            $this->ProjectId = $param["ProjectId"];
        }

        if (array_key_exists("InstanceIds",$param) and $param["InstanceIds"] !== null) {
            $this->InstanceIds = $param["InstanceIds"];
        }

        if (array_key_exists("ClientToken",$param) and $param["ClientToken"] !== null) {
            $this->ClientToken = $param["ClientToken"];
        }

        if (array_key_exists("ProxyIds",$param) and $param["ProxyIds"] !== null) {
            $this->ProxyIds = $param["ProxyIds"];
        }
    }
}
